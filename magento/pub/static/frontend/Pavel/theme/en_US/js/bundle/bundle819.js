require.config({"config": {
        "jsbuild":{"Magento_Swagger/swagger-ui/js/lang/translator.js":"(function () {\n    'use strict';\n\n    /**\n     * Translator for documentation pages.\n     *\n     * To enable translation you should include one of language-files in your index.html\n     * after <script src='lang/translator.js' type='text/javascript'></script>.\n     * For example - <script src='lang/ru.js' type='text/javascript'></script>\n     *\n     * If you wish to translate some new texsts you should do two things:\n     * 1. Add a new phrase pair (\"New Phrase\": \"New Translation\") into your language file (for example lang/ru.js).\n     * It will be great if you add it in other language files too.\n     * 2. Mark that text it templates this way <anyHtmlTag data-sw-translate>New Phrase</anyHtmlTag>\n     * or <anyHtmlTag data-sw-translate value='New Phrase'/>.\n     * The main thing here is attribute data-sw-translate.\n     * Only inner html, title-attribute and value-attribute are going to translate.\n     */\n    window.SwaggerTranslator = {\n        _words: [],\n\n        /** @function translate */\n        translate: function (sel) {\n            var $this = this;\n\n            sel = sel || '[data-sw-translate]';\n\n            Array.prototype.slice.call(document.querySelectorAll(sel)).forEach(function (elem) {\n                elem.innerHTML = $this._tryTranslate(elem.innerHTML);\n                elem.value = $this._tryTranslate(elem.value);\n                elem.setAttribute('title', $this._tryTranslate(elem.getAttribute('title')));\n            });\n        },\n\n        /** @function translate */\n        _tryTranslate: function (word) {\n            word = word || '';\n\n            return this._words[word.trim()] !== undefined ? this._words[word.trim()] : word;\n        },\n\n        /** @function learn */\n        learn: function (wordsMap) {\n            this._words = wordsMap;\n        }\n    };\n})();\n"}
}});
