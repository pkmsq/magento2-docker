require.config({"config": {
        "jsbuild":{"mage/list.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @deprecated since version 2.2.0\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'jquery-ui-modules/widget'\n], function ($, mageTemplate) {\n    'use strict';\n\n    $.widget('mage.list', {\n        options: {\n            template: '[data-role=item]', //template for item,\n            templateWrapper: null, //template wrapper\n            templateClass: null, //template wrapper class\n            destinationSelector: '[data-role=container]', //destination selector of list\n            itemIndex: 0, //setting an item index\n            itemCount: 0, //get count of items\n            addButton: '[data-button=add]', //button for adding list item\n            removeButton: '[data-button=remove]', //button for removing list item\n            maxItems: null,\n            maxItemsAlert: null\n        },\n\n        /**\n         * @private\n         */\n        _create: function () {\n            var options, destination, addButton;\n\n            this.options.itemCount = this.options.itemIndex = 0;\n\n            options = this.options;\n            destination = $(options.destinationSelector);\n            addButton = this.element.find($(options.addButton));\n\n            this.element\n                .addClass('list-widget');\n\n            addButton.on('click', $.proxy(this.handleAdd, this));\n\n            //handle remove\n            destination.on('click', this.options.removeButton, $.proxy(this.removeItem, this));\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        handleAdd: function () {\n            this.addItem(++this.options.itemIndex);\n\n            return false;\n        },\n\n        /**\n         * @param {*} index\n         * @param {*} parent\n         * @return {*|jQuery|HTMLElement}\n         */\n        addItem: function (index, parent) {\n            var options = this.options,\n                template = $(options.template),\n                destination = $(options.destinationSelector),\n                item = $(options.templateWrapper),\n                source, preTemplate, context, compiledTemplate;\n\n            item.addClass(this.options.templateClass)\n                .attr('id', 'list-item-' + index)\n                .attr('data-role', 'addedItem')\n                .attr('data-parent', parent);\n\n            source = template.html();\n            preTemplate = mageTemplate(source);\n            context = this.handleContext(index);\n            compiledTemplate = preTemplate({\n                data: context\n            });\n\n            item.append(compiledTemplate);\n            destination.append(item);\n\n            this.checkLimit(++this.options.itemCount);\n\n            return item;\n        },\n\n        /**\n         * @param {*} index\n         * @return {Object}\n         */\n        handleContext: function (index) {\n            var context = {\n                _index_: index\n            };\n\n            return context;\n        },\n\n        /**\n         * @param {jQuery.Event} e\n         * @return {Boolean}\n         */\n        removeItem: function (e) {\n            $(e.currentTarget).closest('[data-role=\"addedItem\"]').remove();\n\n            this.checkLimit(--this.options.itemCount);\n\n            return false;\n        },\n\n        /**\n         * @param {*} index\n         */\n        checkLimit: function (index) {\n            var addButton = $(this.options.addButton),\n                maxItems = this.options.maxItems,\n                maxItemsAlert = $(this.options.maxItemsAlert);\n\n            if (maxItems !== null && index >= maxItems) {\n                addButton.hide();\n                maxItemsAlert.show();\n            } else if (addButton.is(':hidden')) {\n                addButton.show();\n                maxItemsAlert.hide();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _destroy: function () {\n            var destination = $(this.options.destinationSelector);\n\n            this.element\n                .removeClass('list-widget');\n            destination\n                .find('[data-role=\"addedItem\"]')\n                .remove();\n        }\n    });\n\n    return $.mage.list;\n});\n"}
}});
