require.config({"config": {
        "jsbuild":{"Magento_Swagger/swagger-ui/js/magento-swagger.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*global SwaggerTranslator SwaggerUIBundle SwaggerUIStandalonePreset */\n\n/**\n * @api\n */\n(function () {\n    'use strict';\n\n    var elementBaseUrl = document.querySelector('#input_baseUrl'),\n        url = elementBaseUrl.value,\n        ui;\n\n    // Pre load translate...\n    if (SwaggerTranslator) {\n        SwaggerTranslator.translate();\n    }\n\n    /**\n     * Takes token from input and adds it to request header.\n     */\n    function addApiKeyAuthorization(e) {\n        var key = encodeURIComponent(e.target.value).trim();\n\n        if (key) {\n            /**\n             * Adds Auth token to request header.\n             *\n             * @param {Object} req\n             *\n             * @returns {Object} req\n             */\n            ui.getConfigs().requestInterceptor = function (req) {\n                req.headers.Authorization = 'Bearer ' + key;\n\n                return req;\n            };\n        }\n    }\n\n    ui = new SwaggerUIBundle({\n        url: url,\n        // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n        dom_id: '#swagger-ui-container',\n        presets: [\n            SwaggerUIBundle.presets.apis,\n            SwaggerUIStandalonePreset\n        ],\n        plugins: [\n            SwaggerUIBundle.plugins.DownloadUrl\n        ],\n        deepLinking: true,\n        // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n        supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch'],\n        docExpansion: 'none',\n        apisSorter: 'alpha',\n        showRequestHeaders: false,\n        layout: 'StandaloneLayout'\n    });\n\n    document.querySelector('#input_apiKey').addEventListener('change', addApiKeyAuthorization);\n    document.querySelector('#explore').addEventListener('click', function () {\n        ui.specActions.download();\n    });\n})();\n"}
}});
