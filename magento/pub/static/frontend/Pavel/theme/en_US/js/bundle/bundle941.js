require.config({"config": {
        "jsbuild":{"jquery/ui-modules/effect-fold.js":"/*!\n * jQuery UI Effects Fold - v1.10.4\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/fold-effect/\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($, undefined) {\n\n    $.effects.effect.fold = function (o, done) {\n\n        // Create element\n        var el = $(this),\n            props = [\"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\"],\n            mode = $.effects.setMode(el, o.mode || \"hide\"),\n            show = mode === \"show\",\n            hide = mode === \"hide\",\n            size = o.size || 15,\n            percent = /([0-9]+)%/.exec(size),\n            horizFirst = !!o.horizFirst,\n            widthFirst = show !== horizFirst,\n            ref = widthFirst ? [\"width\", \"height\"] : [\"height\", \"width\"],\n            duration = o.duration / 2,\n            wrapper, distance,\n            animation1 = {},\n            animation2 = {};\n\n        $.effects.save(el, props);\n        el.show();\n\n        // Create Wrapper\n        wrapper = $.effects.createWrapper(el).css({\n            overflow: \"hidden\"\n        });\n        distance = widthFirst ?\n            [wrapper.width(), wrapper.height()] :\n            [wrapper.height(), wrapper.width()];\n\n        if (percent) {\n            size = parseInt(percent[1], 10) / 100 * distance[hide ? 0 : 1];\n        }\n        if (show) {\n            wrapper.css(horizFirst ? {\n                height: 0,\n                width: size\n            } : {\n                height: size,\n                width: 0\n            });\n        }\n\n        // Animation\n        animation1[ref[0]] = show ? distance[0] : size;\n        animation2[ref[1]] = show ? distance[1] : 0;\n\n        // Animate\n        wrapper\n            .animate(animation1, duration, o.easing)\n            .animate(animation2, duration, o.easing, function () {\n                if (hide) {\n                    el.hide();\n                }\n                $.effects.restore(el, props);\n                $.effects.removeWrapper(el);\n                done();\n            });\n    };\n\n});\n"}
}});
